{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dervis Yasin Yalcin\\\\Desktop\\\\ChatNew\\\\client\\\\src\\\\components\\\\MessageForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./MessageForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MessageForm() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const user = useSelector(state => state.user);\n  const {\n    socket,\n    currentRoom,\n    setMessages,\n    messages,\n    privateMemberMsg\n  } = useContext(AppContext);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  const todayDate = getFormattedDate();\n  socket.off(\"room-messages\").on(\"room-messages\", roomMessages => {\n    setMessages(roomMessages);\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!message) return;\n    const today = new Date();\n    const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n    const time = today.getHours() + \":\" + minutes;\n    const roomId = currentRoom;\n    socket.emit(\"message-room\", roomId, message, user, time, todayDate);\n    setMessage(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-output\",\n      children: [user && !(privateMemberMsg !== null && privateMemberMsg !== void 0 && privateMemberMsg._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: [\"You are in the \", currentRoom, \" room\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), user && (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info conversation-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Your conversation with \", privateMemberMsg.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: privateMemberMsg.picture,\n              className: \"conversation-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"Please login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), user && messages.map((_ref, idx) => {\n        let {\n          _id: date,\n          messagesByDate\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-info text-center message-date-indicator\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), messagesByDate === null || messagesByDate === void 0 ? void 0 : messagesByDate.map((_ref2, msgIdx) => {\n            let {\n              content,\n              time,\n              from: sender\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: (sender === null || sender === void 0 ? void 0 : sender.email) == (user === null || user === void 0 ? void 0 : user.email) ? \"message\" : \"incoming-message\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: sender.picture,\n                    style: {\n                      width: 35,\n                      height: 35,\n                      objectFit: \"cover\",\n                      borderRadius: \"50%\",\n                      marginRight: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-sender\",\n                    children: sender._id == (user === null || user === void 0 ? void 0 : user._id) ? \"You\" : sender.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-content\",\n                  children: content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-timestamp-left\",\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, msgIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this);\n          })]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 11,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Your message\",\n              disabled: !user,\n              value: message,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            style: {\n              width: \"100%\",\n              backgroundColor: \"orange\"\n            },\n            disabled: !user,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MessageForm, \"O/Avsn7yoS9Abby5w0pliL5b1/E=\", false, function () {\n  return [useSelector];\n});\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/Dervis Yasin Yalcin/Desktop/ChatNew/client/src/components/MessageForm.js"],"names":["React","useContext","useEffect","useRef","useState","Button","Col","Form","Row","useSelector","AppContext","MessageForm","message","setMessage","user","state","socket","currentRoom","setMessages","messages","privateMemberMsg","messageEndRef","scrollToBottom","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","handleSubmit","e","preventDefault","current","scrollIntoView","behavior","todayDate","off","on","roomMessages","today","minutes","getMinutes","time","getHours","roomId","emit","_id","name","picture","map","idx","messagesByDate","msgIdx","content","from","sender","email","width","height","objectFit","borderRadius","marginRight","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppContext } from \"../context/appContext\";\r\nimport \"./MessageForm.css\";\r\nfunction MessageForm() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.user);\r\n  const { socket, currentRoom, setMessages, messages, privateMemberMsg } =\r\n    useContext(AppContext);\r\n  const messageEndRef = useRef(null);\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  function getFormattedDate() {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    let month = (1 + date.getMonth()).toString();\r\n\r\n    month = month.length > 1 ? month : \"0\" + month;\r\n    let day = date.getDate().toString();\r\n\r\n    day = day.length > 1 ? day : \"0\" + day;\r\n\r\n    return month + \"/\" + day + \"/\" + year;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  const todayDate = getFormattedDate();\r\n\r\n  socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\r\n    setMessages(roomMessages);\r\n  });\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!message) return;\r\n    const today = new Date();\r\n    const minutes =\r\n      today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\r\n    const time = today.getHours() + \":\" + minutes;\r\n    const roomId = currentRoom;\r\n    socket.emit(\"message-room\", roomId, message, user, time, todayDate);\r\n    setMessage(\"\");\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"messages-output\">\r\n        {user && !privateMemberMsg?._id && (\r\n          <div className=\"alert alert-info\">\r\n            You are in the {currentRoom} room\r\n          </div>\r\n        )}\r\n        {user && privateMemberMsg?._id && (\r\n          <>\r\n            <div className=\"alert alert-info conversation-info\">\r\n              <div>\r\n                Your conversation with {privateMemberMsg.name}{\" \"}\r\n                <img\r\n                  src={privateMemberMsg.picture}\r\n                  className=\"conversation-profile-pic\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        {!user && <div className=\"alert alert-danger\">Please login</div>}\r\n\r\n        {user &&\r\n          messages.map(({ _id: date, messagesByDate }, idx) => (\r\n            <div key={idx}>\r\n              <p className=\"alert alert-info text-center message-date-indicator\">\r\n                {date}\r\n              </p>\r\n              {messagesByDate?.map(\r\n                ({ content, time, from: sender }, msgIdx) => (\r\n                  <div\r\n                    className={\r\n                      sender?.email == user?.email\r\n                        ? \"message\"\r\n                        : \"incoming-message\"\r\n                    }\r\n                    key={msgIdx}\r\n                  >\r\n                    <div className=\"message-inner\">\r\n                      <div className=\"d-flex align-items-center mb-3\">\r\n                        <img\r\n                          src={sender.picture}\r\n                          style={{\r\n                            width: 35,\r\n                            height: 35,\r\n                            objectFit: \"cover\",\r\n                            borderRadius: \"50%\",\r\n                            marginRight: 10,\r\n                          }}\r\n                        />\r\n                        <p className=\"message-sender\">\r\n                          {sender._id == user?._id ? \"You\" : sender.name}\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"message-content\">{content}</p>\r\n                      <p className=\"message-timestamp-left\">{time}</p>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          ))}\r\n        <div ref={messageEndRef} />\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md={11}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Your message\"\r\n                disabled={!user}\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={1}>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              style={{ width: \"100%\", backgroundColor: \"orange\" }}\r\n              disabled={!user}\r\n            >\r\n              <i className=\"fas fa-paper-plane\"></i>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageForm;\r\n"]},"metadata":{},"sourceType":"module"}