{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"; // define a service user a base URL\n\nconst appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"\"\n  }),\n  endpoints: builder => ({\n    // creating the user\n    signupUser: builder.mutation({\n      query: user => ({\n        url: \"/users\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // login\n    loginUser: builder.mutation({\n      query: user => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // logout\n    logoutUser: builder.mutation({\n      query: payload => ({\n        url: \"/logout\",\n        method: \"DELETE\",\n        body: payload\n      })\n    })\n  })\n});\nexport const {\n  useSignupUserMutation,\n  useLoginUserMutation,\n  useLogoutUserMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"sources":["C:/Users/Dervis Yasin Yalcin/Desktop/ChatNew/client/src/services/appApi.js"],"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signupUser","mutation","query","user","url","method","body","loginUser","logoutUser","payload","useSignupUserMutation","useLoginUserMutation","useLogoutUserMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AAEA,MAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,EAAAA,WAAW,EAAE,QADU;AAEvBC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE;AADe,GAAD,CAFF;AAMvBC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvB;AACAC,IAAAA,UAAU,EAAED,OAAO,CAACE,QAAR,CAAiB;AAC3BC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,QADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBC,QAAAA,IAAI,EAAEH;AAHU,OAAX;AADoB,KAAjB,CAFW;AAUvB;AACAI,IAAAA,SAAS,EAAER,OAAO,CAACE,QAAR,CAAiB;AAC1BC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,cADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBC,QAAAA,IAAI,EAAEH;AAHU,OAAX;AADmB,KAAjB,CAXY;AAmBvB;AAEAK,IAAAA,UAAU,EAAET,OAAO,CAACE,QAAR,CAAiB;AAC3BC,MAAAA,KAAK,EAAGO,OAAD,KAAc;AACnBL,QAAAA,GAAG,EAAE,SADc;AAEnBC,QAAAA,MAAM,EAAE,QAFW;AAGnBC,QAAAA,IAAI,EAAEG;AAHa,OAAd;AADoB,KAAjB;AArBW,GAAd;AANY,CAAD,CAAxB;AAqCA,OAAO,MAAM;AACXC,EAAAA,qBADW;AAEXC,EAAAA,oBAFW;AAGXC,EAAAA;AAHW,IAITlB,MAJG;AAMP,eAAeA,MAAf","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\n// define a service user a base URL\r\n\r\nconst appApi = createApi({\r\n  reducerPath: \"appApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"\",\r\n  }),\r\n\r\n  endpoints: (builder) => ({\r\n    // creating the user\r\n    signupUser: builder.mutation({\r\n      query: (user) => ({\r\n        url: \"/users\",\r\n        method: \"POST\",\r\n        body: user,\r\n      }),\r\n    }),\r\n\r\n    // login\r\n    loginUser: builder.mutation({\r\n      query: (user) => ({\r\n        url: \"/users/login\",\r\n        method: \"POST\",\r\n        body: user,\r\n      }),\r\n    }),\r\n\r\n    // logout\r\n\r\n    logoutUser: builder.mutation({\r\n      query: (payload) => ({\r\n        url: \"/logout\",\r\n        method: \"DELETE\",\r\n        body: payload,\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useSignupUserMutation,\r\n  useLoginUserMutation,\r\n  useLogoutUserMutation,\r\n} = appApi;\r\n\r\nexport default appApi;\r\n"]},"metadata":{},"sourceType":"module"}