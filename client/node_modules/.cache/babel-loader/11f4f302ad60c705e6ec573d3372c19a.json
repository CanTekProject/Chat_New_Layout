{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dervis Yasin Yalcin\\\\Desktop\\\\ChatNew\\\\client\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar() {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    socket,\n    setMembers,\n    members,\n    setCurrentRoom,\n    setRooms,\n    privateMemberMsg,\n    rooms,\n    setPrivateMemberMsg,\n    currentRoom\n  } = useContext(AppContext);\n\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!user) {\n      return alert(\"Please login\");\n    }\n\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    } // dispatch for notifications\n\n\n    dispatch(resetNotifications(room));\n  }\n\n  socket.off(\"notifications\").on(\"notifications\", room => {\n    if (currentRoom != room) dispatch(addNotifications(room));\n  });\n  useEffect(() => {\n    if (user) {\n      setCurrentRoom(\"general\");\n      getRooms();\n      socket.emit(\"join-room\", \"general\");\n      socket.emit(\"new-user\");\n    }\n  }, []);\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n\n  function getRooms() {\n    fetch(\"http://localhost:5001/rooms\").then(res => res.json()).then(data => setRooms(data));\n  }\n\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => joinRoom(room),\n        active: room == currentRoom,\n        style: {\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [room, \" \", currentRoom !== room && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), members.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\"\n      },\n      active: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) == (member === null || member === void 0 ? void 0 : member._id),\n      onClick: () => handlePrivateMemberMsg(member),\n      disabled: member._id === user._id,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"member-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: member.picture,\n            className: \"member-status-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), member.status == \"online\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-online-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-offline-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          children: [member.name, member._id === (user === null || user === void 0 ? void 0 : user._id) && \" (You)\", member.status == \"offline\" && \" (Offline)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge rounded-pill bg-primary\",\n            children: user.newMessages[orderIds(member._id, user._id)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Sidebar, \"ce0bdDj5gM9FT2Ydg8b6DWH0eBM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Dervis Yasin Yalcin/Desktop/ChatNew/client/src/components/Sidebar.js"],"names":["React","useContext","useEffect","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Sidebar","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","rooms","setPrivateMemberMsg","currentRoom","joinRoom","room","isPublic","alert","emit","off","on","getRooms","payload","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","map","idx","cursor","display","justifyContent","newMessages","picture","status","name","id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppContext } from \"../context/appContext\";\r\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    socket,\r\n    setMembers,\r\n    members,\r\n    setCurrentRoom,\r\n    setRooms,\r\n    privateMemberMsg,\r\n    rooms,\r\n    setPrivateMemberMsg,\r\n    currentRoom,\r\n  } = useContext(AppContext);\r\n\r\n  function joinRoom(room, isPublic = true) {\r\n    if (!user) {\r\n      return alert(\"Please login\");\r\n    }\r\n    socket.emit(\"join-room\", room, currentRoom);\r\n    setCurrentRoom(room);\r\n\r\n    if (isPublic) {\r\n      setPrivateMemberMsg(null);\r\n    }\r\n    // dispatch for notifications\r\n    dispatch(resetNotifications(room));\r\n  }\r\n\r\n  socket.off(\"notifications\").on(\"notifications\", (room) => {\r\n    if (currentRoom != room) dispatch(addNotifications(room));\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setCurrentRoom(\"general\");\r\n      getRooms();\r\n      socket.emit(\"join-room\", \"general\");\r\n      socket.emit(\"new-user\");\r\n    }\r\n  }, []);\r\n\r\n  socket.off(\"new-user\").on(\"new-user\", (payload) => {\r\n    setMembers(payload);\r\n  });\r\n\r\n  function getRooms() {\r\n    fetch(\"http://localhost:5001/rooms\")\r\n      .then((res) => res.json())\r\n      .then((data) => setRooms(data));\r\n  }\r\n\r\n  function orderIds(id1, id2) {\r\n    if (id1 > id2) {\r\n      return id1 + \"-\" + id2;\r\n    } else {\r\n      return id2 + \"-\" + id1;\r\n    }\r\n  }\r\n\r\n  function handlePrivateMemberMsg(member) {\r\n    setPrivateMemberMsg(member);\r\n    const roomId = orderIds(user._id, member._id);\r\n    joinRoom(roomId, false);\r\n  }\r\n\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Available rooms</h2>\r\n      <ListGroup>\r\n        {rooms.map((room, idx) => (\r\n          <ListGroup.Item\r\n            key={idx}\r\n            onClick={() => joinRoom(room)}\r\n            active={room == currentRoom}\r\n            style={{\r\n              cursor: \"pointer\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            {room}{\" \"}\r\n            {currentRoom !== room && (\r\n              <span className=\"badge rounded-pill bg-primary\">\r\n                {user.newMessages[room]}\r\n              </span>\r\n            )}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n      <h2>Members</h2>\r\n      {members.map((member) => (\r\n        <ListGroup.Item\r\n          key={member.id}\r\n          style={{ cursor: \"pointer\" }}\r\n          active={privateMemberMsg?._id == member?._id}\r\n          onClick={() => handlePrivateMemberMsg(member)}\r\n          disabled={member._id === user._id}\r\n        >\r\n          <Row>\r\n            <Col xs={2} className=\"member-status\">\r\n              <img src={member.picture} className=\"member-status-img\" />\r\n              {member.status == \"online\" ? (\r\n                <i className=\"fas fa-circle sidebar-online-status\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-circle sidebar-offline-status\"></i>\r\n              )}\r\n            </Col>\r\n            <Col xs={9}>\r\n              {member.name}\r\n              {member._id === user?._id && \" (You)\"}\r\n              {member.status == \"offline\" && \" (Offline)\"}\r\n            </Col>\r\n            <Col xs={1}>\r\n              <span className=\"badge rounded-pill bg-primary\">\r\n                {user.newMessages[orderIds(member._id, user._id)]}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}